{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/czar/ipe/intelliplant/screens/SignUpScreen.js\";\n\nimport React, { useState } from \"react\";\nimport * as Font from \"expo-font\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as firebase from \"firebase\";\nvar logo = {\n  uri: \"https://i.ibb.co/tsbwb1X/logo.jpg\"\n};\n\nvar SignUpScreen = function SignUpScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var emailHandler = function emailHandler(enteredText) {\n    setEmail(enteredText);\n  };\n\n  var passwordHandler = function passwordHandler(enteredText) {\n    setPassword(enteredText);\n  };\n\n  var handleRegister = function handleRegister() {\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(function (error) {\n      setError(error.message);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.errorMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, error && email != \"\" && React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }\n  }, error)), React.createElement(Image, {\n    source: logo,\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputBox,\n    placeholder: \"Nome Completo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputBox,\n    placeholder: \"Email\",\n    onChangeText: emailHandler,\n    value: email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.inputBox,\n    placeholder: \"Senha\",\n    onChangeText: passwordHandler,\n    value: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.inputBox,\n    placeholder: \"Confirmar Senha\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleRegister,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \" Fazer Cadastro \")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fdfeff\"\n  },\n  inputBox: {\n    padding: 5,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"#73C6D8\",\n    width: \"80%\",\n    height: 40,\n    margin: 8,\n    fontFamily: \"sofia-pro\"\n  },\n  button: {\n    marginVertical: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#5DAE22\",\n    borderRadius: 4,\n    height: 30,\n    width: \"80%\"\n  },\n  errorMessage: {\n    fontSize: 20\n  },\n  image: {\n    width: \"100%\",\n    height: \"20%\",\n    resizeMode: \"contain\"\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["/home/czar/ipe/intelliplant/screens/SignUpScreen.js"],"names":["React","useState","Font","firebase","logo","uri","SignUpScreen","props","email","setEmail","password","setPassword","error","setError","emailHandler","enteredText","passwordHandler","handleRegister","auth","createUserWithEmailAndPassword","catch","message","styles","container","errorMessage","image","inputBox","button","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","padding","borderWidth","borderRadius","borderColor","width","height","margin","fontFamily","marginVertical","fontSize","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as Font from \"expo-font\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport * as firebase from \"firebase\";\n\nconst logo = { uri: \"https://i.ibb.co/tsbwb1X/logo.jpg\" };\n\n/*const [loaded] = useFonts({\n  SofiaProLight: require('../assets/fonts/sofia-pro-light.otf'),\n});*/\n\nconst SignUpScreen = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const emailHandler = (enteredText) => {\n    setEmail(enteredText);\n  };\n  const passwordHandler = (enteredText) => {\n    setPassword(enteredText);\n  };\n  const handleRegister = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n  return (\n    <View style={styles.container}>\n      <View style={styles.errorMessage}>\n        {error && email != \"\" && <Text style={styles.error}>{error}</Text>}\n      </View>\n      <Image source={logo} style={styles.image} />\n      <TextInput style={styles.inputBox} placeholder=\"Nome Completo\" />\n      <TextInput\n        style={styles.inputBox}\n        placeholder=\"Email\"\n        onChangeText={emailHandler}\n        value={email}\n      />\n      <TextInput\n        secureTextEntry={true}\n        style={styles.inputBox}\n        placeholder=\"Senha\"\n        onChangeText={passwordHandler}\n        value={password}\n      />\n      <TextInput\n        secureTextEntry={true}\n        style={styles.inputBox}\n        placeholder=\"Confirmar Senha\"\n      />\n      <TouchableOpacity style={styles.button} onPress={handleRegister}>\n        <Text> Fazer Cadastro </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fdfeff\",\n  },\n  inputBox: {\n    padding: 5,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"#73C6D8\",\n    width: \"80%\",\n    height: 40,\n    margin: 8,\n    fontFamily: \"sofia-pro\",\n  },\n  button: {\n    marginVertical: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#5DAE22\",\n    borderRadius: 4,\n    height: 30,\n    width: \"80%\",\n  },\n  errorMessage: {\n    fontSize: 20,\n  },\n  image: {\n    width: \"100%\",\n    height: \"20%\",\n    resizeMode: \"contain\",\n  },\n});\nexport default SignUpScreen;\n"]},"metadata":{},"sourceType":"module"}